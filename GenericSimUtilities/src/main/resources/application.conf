cinnamon {
    application = "SeaPhishSimulator"
    prometheus {
      exporters += http-server
    }

    chmetrics {
      reporters += "console-reporter"
    }

    akka.actors = {
    default-by-class {
      includes = "/user/*"
      report-by = class
    }
    }

    akka.dispatchers = {
    basic-information {
      names = ["*"]
    }
    time-information {
      names = ["*"]
    }
    }

    akka.remote = {
    serialization-timing = on
    failure-detector-metrics = on
    }

    akka.cluster = {
    domain-events = on
    node-metrics = on
    member-events = on
    singleton-events = on
    shard-region-info = on
    }

    akka.http = {
    servers {
      "*:*" {
        paths {
          "*" {
            metrics = on
          }
        }
      }
    }
    clients {
      "*:*" {
        paths {
          "*" {
            metrics = on
          }
        }
      }
    }
    }
} #cinnamon config space

akka {
    actor {
        provider = cluster
        allow-java-serialization = on
        serializers {
          proto = "akka.remote.serialization.ProtobufSerializer"
          java = "akka.serialization.JavaSerializer"
        }
        serialization-bindings {
          "com.google.protobuf.Message" = proto
          "java.io.Serializable" = java
        }
      }
      remote {
        artery {
          transport = tcp
#          canonical.hostname = "127.0.0.1"
#          canonical.port = 25520
        }
      }
      persistence {
        journal.plugin = "cassandra-journal"
        snapshot-store.plugin = "cassandra-snapshot-store"
        snapshot-store.plugin = "cassandra-snapshot-store"
        journal.plugin = "akka.persistence.cassandra.journal"
        cassandra.journal.keyspace-autocreate = true
        cassandra.journal.tables-autocreate = true
        snapshot-store.plugin = "akka.persistence.cassandra.snapshot"
        cassandra.snapshot.keyspace-autocreate = true
        cassandra.snapshot.tables-autocreate = true
      }
    cluster {
      seed-nodes = [
        "akka://"${SeaphishSimulator.name}"@192.168.1.7:25251",
        "akka://"${SeaphishSimulator.name}"@192.168.1.8:25252"
      ]
      downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
    }
}

datastax-java-driver {
    advanced.reconnect-on-init = true
    }

SeaphishSimulator {
    seed = 10
    GapModel {
        distanceSpreadThreshold = 0.1
        modificationProbability = 0.1
        perturbationCoefficient = 0.1
        distanceCoefficient = 0.1
        edgeProbability = 0.3
        statesTotal = 100
        maxBranchingFactor = 7
        maxDepth =5
        maxProperties = 20
        propValueRange = 100
        actionRange = 10
        connectedness = 28
        maxWalkPathLengthCoeff = 1.2
        graphWalkTerminationPolicy = "maxpathlength" #untilcycle, all, maxpathlength
    }
    name = ${SeaphishSimulator.Constants.ActorSystemName}
    Constants {
        ActorSystemName = "SeaPhishSystem"
    }
}
